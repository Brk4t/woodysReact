{"ast":null,"code":"import _asyncToGenerator from \"E:/woodys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"E:/woodys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"E:\\\\woodys\\\\src\\\\component\\\\home.jsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport _regeneratorRuntime from \"E:\\\\woodys\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport WalletBalance from \"./WalletBalance\";\nimport Woodys from \"../abi/woodys.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar contractAddress = \"0x46eB4731cBa709cd3c1174B700D61EcFb722A32e\";\nvar provider = new ethers.providers.Web3Provider(window.ethereum);\nvar signer = provider.getSigner();\nvar woodyContract = new ethers.Contract(contractAddress, Woodys.abi, signer);\n\nvar Home = function Home() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalMinted = _useState2[0],\n      setTotalMinted = _useState2[1];\n\n  useEffect(function () {\n    getCount();\n  }, []);\n\n  var getCount = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var count;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return woodyContract.count();\n\n            case 2:\n              count = _context.sent;\n              console.log(parseInt(count));\n              setTotalMinted(parseInt(count));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getCount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Metamask installed, now what\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(WalletBalance, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT collection \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"MyCollection\",\n      children: Array(totalMinted + 1).fill(0).map(function (_, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(NFTImage, {\n            tokenId: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, _this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"yOFXLBAC6K9F8DYBqLzJV/2kpHo=\");\n\n_c = Home;\n\nfunction NFTImage(props) {\n  _s2();\n\n  console.log(\"props \" + props.tokenId);\n  var metadataURI = \"../QxHASHAHASHASHASHAS/\".concat(props.tokendId, \".json\");\n  var imageURI = '../img/' + props.tokenId + '.png';\n  console.log(imageURI);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMinted = _useState4[0],\n      setIsMinted = _useState4[1];\n\n  useEffect(function () {\n    getMintedStatus();\n  }, [isMinted]);\n\n  var getMintedStatus = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return woodyContract.isContentOwned(metadataURI);\n\n            case 2:\n              result = _context2.sent;\n              console.log(result);\n              setIsMinted(result);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getMintedStatus() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mintToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var connection, addr, result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              connection = woodyContract.connect(signer);\n              addr = connection.address;\n              _context3.next = 4;\n              return woodyContract.payToMint(addr, metadataURI, {\n                value: ethers.utils.parseEther(\"0.05\")\n              });\n\n            case 4:\n              result = _context3.sent;\n              _context3.next = 7;\n              return result.wait();\n\n            case 7:\n              getMintedStatus();\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function mintToken() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  function getURI() {\n    return _getURI.apply(this, arguments);\n  }\n\n  function _getURI() {\n    _getURI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var uri;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return woodyContract.tokenURI(props.tokenId);\n\n            case 2:\n              uri = _context4.sent;\n              return _context4.abrupt(\"return\", uri);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _getURI.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: isMinted ? imageURI : \"https://jooinn.com/images/lock-12.png\",\n      width: \"200\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" ID #\", props.tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), !isMinted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mintToken,\n        children: \"Mint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getURI,\n        children: \"Taken! Show URI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(NFTImage, \"Nz0k7vChY4jLjUpyeROIoOxRs8c=\");\n\n_c2 = NFTImage;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"NFTImage\");","map":{"version":3,"sources":["E:/woodys/src/component/home.jsx"],"names":["useEffect","useState","ethers","WalletBalance","Woodys","contractAddress","provider","providers","Web3Provider","window","ethereum","signer","getSigner","woodyContract","Contract","abi","Home","totalMinted","setTotalMinted","getCount","count","console","log","parseInt","Array","fill","map","_","i","NFTImage","props","tokenId","metadataURI","tokendId","imageURI","isMinted","setIsMinted","getMintedStatus","isContentOwned","result","mintToken","connection","connect","addr","address","payToMint","value","utils","parseEther","wait","getURI","tokenURI","uri"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { ethers } from \"ethers\";\r\nimport WalletBalance from \"./WalletBalance\";\r\nimport Woodys from \"../abi/woodys.json\";\r\n\r\nconst contractAddress = \"0x46eB4731cBa709cd3c1174B700D61EcFb722A32e\";\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\nconst signer = provider.getSigner();\r\n\r\nconst woodyContract = new ethers.Contract(contractAddress, Woodys.abi, signer);\r\n\r\nconst Home = () => {\r\n  const [totalMinted, setTotalMinted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getCount();\r\n  }, []);\r\n\r\n  const getCount = async () => {\r\n    const count = await woodyContract.count();\r\n    console.log(parseInt(count));\r\n    setTotalMinted(parseInt(count));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3> Metamask installed, now what</h3>\r\n      <WalletBalance />\r\n      <h1>NFT collection </h1>\r\n      <div class =\"MyCollection\">\r\n      {Array(totalMinted + 1)\r\n        .fill(0)\r\n        .map((_, i) => (\r\n          <div key={i}>\r\n            <NFTImage tokenId={i} />\r\n          </div>\r\n        ))}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction NFTImage(props) {\r\n  console.log(\"props \" + props.tokenId)\r\n  const metadataURI = `../QxHASHAHASHASHASHAS/${props.tokendId}.json`;\r\n  const imageURI = '../img/'+props.tokenId+'.png';\r\n  \r\n  console.log(imageURI)\r\n\r\n  const [isMinted, setIsMinted] = useState(false);\r\n  useEffect(() => {\r\n    getMintedStatus();\r\n  }, [isMinted]);\r\n\r\n  const getMintedStatus = async () => {\r\n    const result = await woodyContract.isContentOwned(metadataURI);\r\n    console.log(result);\r\n    setIsMinted(result);\r\n  };\r\n\r\n  const mintToken = async () => {\r\n    const connection = woodyContract.connect(signer);\r\n    const addr = connection.address;\r\n    const result = await woodyContract.payToMint(addr, metadataURI, {\r\n      value: ethers.utils.parseEther(\"0.05\")\r\n    });\r\n    await result.wait();\r\n    getMintedStatus();\r\n  };\r\n\r\n  async function getURI() {\r\n    const uri = await woodyContract.tokenURI(props.tokenId);\r\n    return uri;\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <img\r\n        src={isMinted ? imageURI : \"https://jooinn.com/images/lock-12.png\"}\r\n        width=\"200\"\r\n        height=\"200\"\r\n      />\r\n      <div >\r\n        <h5> ID #{props.tokenId}</h5>\r\n        {!isMinted ? (\r\n          <button onClick={mintToken}>Mint</button>\r\n        ) : (\r\n          <button onClick={getURI}>Taken! Show URI</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}